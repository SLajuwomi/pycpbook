\begin{MintedVerbatim}[commandchars=\\\{\}]
\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{Author: PyCPBook Community}
\PYG{l+s+sd}{Source: CP\PYGZhy{}Algorithms, USACO Guide}
\PYG{l+s+sd}{Description: Implements a Sparse Table for fast Range Minimum Queries (RMQ).}
\PYG{l+s+sd}{This data structure is ideal for answering range queries on a static array}
\PYG{l+s+sd}{for idempotent functions like min, max, or gcd.}

\PYG{l+s+sd}{The core idea is to precompute the answers for all ranges that have a length}
\PYG{l+s+sd}{that is a power of two. The table `st[k][i]` stores the minimum value in the}
\PYG{l+s+sd}{range `[i, i + 2\PYGZca{}k \PYGZhy{} 1]`. This precomputation takes \PYGZdl{}O(N \PYGZbs{}\PYGZbs{}log N)\PYGZdl{} time.}

\PYG{l+s+sd}{Once the table is built, a query for any arbitrary range `[l, r]` can be}
\PYG{l+s+sd}{answered in \PYGZdl{}O(1)\PYGZdl{} time. This is achieved by finding the largest power of two,}
\PYG{l+s+sd}{`2\PYGZca{}k`, that is less than or equal to the range length `r \PYGZhy{} l + 1`. The query}
\PYG{l+s+sd}{then returns the minimum of two overlapping ranges: `[l, l + 2\PYGZbs{}\PYGZbs{}\PYGZca{}k \PYGZhy{} 1]` and}
\PYG{l+s+sd}{`[r \PYGZhy{} 2\PYGZca{}k + 1, r]`. Because `min` is an idempotent function, the overlap}
\PYG{l+s+sd}{does not affect the result.}

\PYG{l+s+sd}{This implementation is for range minimum, but can be easily adapted for range}
\PYG{l+s+sd}{maximum by changing `min` to `max`.}

\PYG{l+s+sd}{Time: Precomputation is \PYGZdl{}O(N \PYGZbs{}\PYGZbs{}log N)\PYGZdl{}. Each query is \PYGZdl{}O(1)\PYGZdl{}.}
\PYG{l+s+sd}{Space: \PYGZdl{}O(N \PYGZbs{}\PYGZbs{}log N)\PYGZdl{} to store the sparse table.}
\PYG{l+s+sd}{Status: Stress\PYGZhy{}tested}
\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}

\PYG{k+kn}{import}\PYG{+w}{ }\PYG{n+nn}{math}


\PYG{k}{class}\PYG{+w}{ }\PYG{n+nc}{SparseTable}\PYG{p}{:}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    A class that implements a Sparse Table for efficient Range Minimum Queries.}
\PYG{l+s+sd}{    This implementation assumes 0\PYGZhy{}based indexing for the input array and queries.}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}

    \PYG{k}{def}\PYG{+w}{ }\PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{arr}\PYG{p}{)}\PYG{p}{:}
\PYG{+w}{        }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{        Initializes the Sparse Table from an input array.}

\PYG{l+s+sd}{        Args:}
\PYG{l+s+sd}{            arr (list[int]): The static list of numbers to be queried.}
\PYG{l+s+sd}{        \PYGZdq{}\PYGZdq{}\PYGZdq{}}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{n} \PYG{o}{=} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{arr}\PYG{p}{)}
        \PYG{k}{if} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{n} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{:}
            \PYG{k}{return}

        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{max\PYGZus{}log} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{n}\PYG{o}{.}\PYG{n}{bit\PYGZus{}length}\PYG{p}{(}\PYG{p}{)} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{st} \PYG{o}{=} \PYG{p}{[}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]} \PYG{o}{*} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{n} \PYG{k}{for} \PYG{n}{\PYGZus{}} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{max\PYGZus{}log} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{)}\PYG{p}{]}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{st}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]} \PYG{o}{=} \PYG{n+nb}{list}\PYG{p}{(}\PYG{n}{arr}\PYG{p}{)}

        \PYG{k}{for} \PYG{n}{k} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{max\PYGZus{}log} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{)}\PYG{p}{:}
            \PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{n} \PYG{o}{\PYGZhy{}} \PYG{p}{(}\PYG{l+m+mi}{1} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{k}\PYG{p}{)} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{)}\PYG{p}{:}
                \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{st}\PYG{p}{[}\PYG{n}{k}\PYG{p}{]}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]} \PYG{o}{=} \PYG{n+nb}{min}\PYG{p}{(}
                    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{st}\PYG{p}{[}\PYG{n}{k} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}\PYG{p}{]}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{st}\PYG{p}{[}\PYG{n}{k} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}\PYG{p}{]}\PYG{p}{[}\PYG{n}{i} \PYG{o}{+} \PYG{p}{(}\PYG{l+m+mi}{1} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{p}{(}\PYG{n}{k} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}\PYG{p}{)}\PYG{p}{)}\PYG{p}{]}
                \PYG{p}{)}

        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{log\PYGZus{}table} \PYG{o}{=} \PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]} \PYG{o}{*} \PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{n} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{)}
        \PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{2}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{n} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{)}\PYG{p}{:}
            \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{log\PYGZus{}table}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{log\PYGZus{}table}\PYG{p}{[}\PYG{n}{i} \PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{l+m+mi}{1}\PYG{p}{]} \PYG{o}{+} \PYG{l+m+mi}{1}

    \PYG{k}{def}\PYG{+w}{ }\PYG{n+nf}{query}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{l}\PYG{p}{,} \PYG{n}{r}\PYG{p}{)}\PYG{p}{:}
\PYG{+w}{        }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{        Queries the minimum value in the inclusive range [l, r].}

\PYG{l+s+sd}{        Args:}
\PYG{l+s+sd}{            l (int): The 0\PYGZhy{}based inclusive starting index of the range.}
\PYG{l+s+sd}{            r (int): The 0\PYGZhy{}based inclusive ending index of the range.}

\PYG{l+s+sd}{        Returns:}
\PYG{l+s+sd}{            int: The minimum value in the range [l, r]. Returns infinity}
\PYG{l+s+sd}{                 if the table is empty or the range is invalid.}
\PYG{l+s+sd}{        \PYGZdq{}\PYGZdq{}\PYGZdq{}}
        \PYG{k}{if} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{n} \PYG{o}{==} \PYG{l+m+mi}{0} \PYG{o+ow}{or} \PYG{n}{l} \PYG{o}{\PYGZgt{}} \PYG{n}{r}\PYG{p}{:}
            \PYG{k}{return} \PYG{n+nb}{float}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}}\PYG{l+s+s2}{inf}\PYG{l+s+s2}{\PYGZdq{}}\PYG{p}{)}

        \PYG{n}{length} \PYG{o}{=} \PYG{n}{r} \PYG{o}{\PYGZhy{}} \PYG{n}{l} \PYG{o}{+} \PYG{l+m+mi}{1}
        \PYG{n}{k} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{log\PYGZus{}table}\PYG{p}{[}\PYG{n}{length}\PYG{p}{]}
        \PYG{k}{return} \PYG{n+nb}{min}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{st}\PYG{p}{[}\PYG{n}{k}\PYG{p}{]}\PYG{p}{[}\PYG{n}{l}\PYG{p}{]}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{st}\PYG{p}{[}\PYG{n}{k}\PYG{p}{]}\PYG{p}{[}\PYG{n}{r} \PYG{o}{\PYGZhy{}} \PYG{p}{(}\PYG{l+m+mi}{1} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{k}\PYG{p}{)} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{]}\PYG{p}{)}

\end{MintedVerbatim}
